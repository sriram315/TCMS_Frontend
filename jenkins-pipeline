pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID="677043464437"
        AWS_DEFAULT_REGION="ap-south-1"
        IMAGE_REPO_NAME="tcms"
        IMAGE_TAG="latest"
        REPOSITORY_URI = "677043464437.dkr.ecr.ap-south-1.amazonaws.com/tcms"
        AWS_ECR_URL = '677043464437.dkr.ecr.ap-south-1.amazonaws.com'
    }

    stages {

        //stage('Checkout Frontend') {
            //steps {
                //checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: '5b4ffddf-b391-4ca4-ac4f-c1df7601a69e', url: 'https://github.com/Chethanvr06/tcms-frontend.git']])
            //}
        //}     

    stage('Building image') {
      steps{
        script {
          def dockerImage = docker.build "${IMAGE_REPO_NAME}:${IMAGE_TAG}"
          
        }
      }
    }

         stage('Login to AWS ECR') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: 'aws-creds-id'
                ]]) {
                    sh '''
                        aws ecr get-login-password --region $AWS_DEFAULT_REGION | \
                        docker login --username AWS --password-stdin $AWS_ECR_URL
                    '''
                }
            } 
        }
   
    // Uploading Docker images into AWS ECR
    stage('Pushing to ECR') {
     steps{  
         script {
                sh """docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:$IMAGE_TAG"""
                sh """docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"""
         }
        }
      }

 stage('Deploy to Kubernetes') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: 'aws-creds-id' // Should match above or use different valid one
                ]]) {
                    script {
                        sh "aws eks update-kubeconfig --region ${AWS_DEFAULT_REGION} --name tcms-eks"
                        sh "kubectl delete deployment tcms-frontend-app-deployment -n tcms || true"
                        sh "sleep 30"
                        sh "kubectl apply -f tcms-frontend.yaml"
                    }
                }
            }
        }
    }


    //post {
        //success {
            // Notify on success
            //mail bcc: '', body: 'dynamos Frontend pipeline finished successfully', cc: '', from: 'mailto:devops@ifocussystec.com', replyTo: '', subject: 'The dynamos Frontend pipeline success', to: 'mailto:chethan.v@ifocussystec.in'
        //}
        //failure {
            // Notify on failure
            //mail bcc: '', body: 'dynamos Frontend pipeline failed', cc: '', from: 'mailto:devops@ifocussystec.com', replyTo: '', subject: 'The dynamos Frontend pipeline failed', to: 'mailto:chethan.v@ifocussystec.in'
        //}
    //}
}